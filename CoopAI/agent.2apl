/*
 * This is an example model for a new 2APL project
 */
BeliefUpdates:
	{true} EnvironmentLoaded() 	{environmentLoaded}
	{true} Connected()  {connected}
	{true} GameStarted() {gameStarted}
	{true} EndGame()	{winGame}
Beliefs:
	count(0).
Goals:
	environmentLoaded
	
PG-rules:

environmentLoaded <- true |
{
	@starcraft(hello(),_);
	adopta(connected);
	EnvironmentLoaded()
}

winGame <- true |
{
	print(defeatEnemy);
	skip;
	EndGame()
}

PC-rules:		
    
    %Note the use of a function with parameter as events, since functions with no parameters are not supported.
	event(connected(_),starcraft) <- true |
	{
		adopta(gameStarted);
		Connected();
		print(connected);
		skip
	}
	
	event(gameStarted(_),starcraft) <- true |
	{
		adopta(winGame);
		GameStarted();
		print(gamestarted);
		skip
	}
	
	event(enemyUnitDiscovered(EnemyId), starcraft ) <- true |
	{
		@starcraft( selectAll(), ListOfUnits );
		B( ListOfUnits = [actionresult( Units )] );
		@starcraft( attackUnit( Units, EnemyId ), _ );
		
		skip
	}
		
	event( X, _) <- true |
	{
		print(event(X))
	}
	
	
	
	
	